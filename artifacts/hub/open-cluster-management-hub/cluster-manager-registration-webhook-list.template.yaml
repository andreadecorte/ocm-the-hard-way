apiVersion: v1
kind: List
items:
# Secret registration-webhook-serving-cert
- apiVersion: v1
  kind: Secret
  metadata:
    namespace: open-cluster-management-hub
    name: registration-webhook-serving-cert
  type: kubernetes.io/tls
  data:
    tls.crt: TLS_SERVING_CERT
    tls.key: TLS_SERVING_KEY

# Service cluster-manager-registration-webhook
- apiVersion: v1
  kind: Service
  metadata:
    name: cluster-manager-registration-webhook
    namespace: open-cluster-management-hub
  spec:
    clusterIP: 10.96.130.9
    clusterIPs:
    - 10.96.130.9
    ports:
    - port: 443
      protocol: TCP
      targetPort: 6443
    selector:
      app: cluster-manager-registration-webhook
    sessionAffinity: None
    type: ClusterIP

# APIService v1.admission.cluster.open-cluster-management.io
- apiVersion: apiregistration.k8s.io/v1
  kind: APIService
  metadata:
    name: v1.admission.cluster.open-cluster-management.io
  spec:
    caBundle: SERVICE_SERVING_CERT_CA
    group: admission.cluster.open-cluster-management.io
    groupPriorityMinimum: 10000
    service:
        name: cluster-manager-registration-webhook
        namespace: open-cluster-management-hub
        port: 443
    version: v1
    versionPriority: 20

- apiVersion: admissionregistration.k8s.io/v1
  kind: ValidatingWebhookConfiguration
  metadata:
    name: managedclustervalidators.admission.cluster.open-cluster-management.io
  webhooks:
  - admissionReviewVersions:
    - v1beta1
    clientConfig:
      service:
        name: kubernetes
        namespace: default
        path: /apis/admission.cluster.open-cluster-management.io/v1/managedclustervalidators
        port: 443
    failurePolicy: Fail
    matchPolicy: Equivalent
    name: managedclustervalidators.admission.cluster.open-cluster-management.io
    namespaceSelector: {}
    objectSelector: {}
    rules:
    - apiGroups:
      - cluster.open-cluster-management.io
      apiVersions:
      - '*'
      operations:
      - CREATE
      - UPDATE
      resources:
      - managedclusters
      scope: '*'
    sideEffects: None
    timeoutSeconds: 10
  
# Deployment cluster-manager-registration-webhook
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: cluster-manager-registration-webhook
    name: cluster-manager-registration-webhook
    namespace: open-cluster-management-hub
  spec:
    progressDeadlineSeconds: 600
    replicas: 1 # should be 3
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: cluster-manager-registration-webhook
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: cluster-manager-registration-webhook
      spec:
        affinity:
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - cluster-manager-registration-webhook
                topologyKey: failure-domain.beta.kubernetes.io/zone
              weight: 70
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - cluster-manager-registration-webhook
                topologyKey: kubernetes.io/hostname
              weight: 30
        containers:
        - args:
          - /registration
          - webhook
          - --secure-port=6443
          - --tls-cert-file=/serving-cert/tls.crt
          - --tls-private-key-file=/serving-cert/tls.key
          image: localhost:5000/open-cluster-management/registration:latest
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 6443
              scheme: HTTPS
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: registration-webhook-sa
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 6443
              scheme: HTTPS
            initialDelaySeconds: 2
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /serving-cert
            name: webhook-secret
            readOnly: true
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: cluster-manager-registration-webhook-sa
        serviceAccountName: cluster-manager-registration-webhook-sa
        terminationGracePeriodSeconds: 30
        volumes:
        - name: webhook-secret
          secret:
            defaultMode: 420
            secretName: registration-webhook-serving-cert
